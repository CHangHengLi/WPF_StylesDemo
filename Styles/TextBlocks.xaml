<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 引用其他资源字典 -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Styles/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- 基础文本样式 -->
    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineHeight" Value="20"/>
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
    </Style>

    <!-- 标题文本样式 -->
    <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5,10,5,15"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Blue">
                <Setter Property="Foreground" Value="{StaticResource Blue.PrimaryBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Green">
                <Setter Property="Foreground" Value="{StaticResource Green.PrimaryBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Red">
                <Setter Property="Foreground" Value="{StaticResource Red.PrimaryBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Dark">
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 副标题文本样式 -->
    <Style x:Key="SubHeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="5,5,5,10"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Blue">
                <Setter Property="Foreground" Value="{StaticResource Blue.SecondaryBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Green">
                <Setter Property="Foreground" Value="{StaticResource Green.SecondaryBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Red">
                <Setter Property="Foreground" Value="{StaticResource Red.SecondaryBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Dark">
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 正文文本样式 -->
    <Style x:Key="BodyTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="14"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Blue">
                <Setter Property="Foreground" Value="{StaticResource Blue.ForegroundBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Green">
                <Setter Property="Foreground" Value="{StaticResource Green.ForegroundBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Red">
                <Setter Property="Foreground" Value="{StaticResource Red.ForegroundBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Dark">
                <Setter Property="Foreground" Value="{StaticResource Dark.ForegroundBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 状态文本样式 -->
    <Style x:Key="StatusTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Style.Triggers>
            <!-- 使用Text属性的值作为状态判断，而不是直接绑定到数据上下文 -->
            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="Success">
                <Setter Property="Foreground" Value="{StaticResource Blue.SuccessBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="Warning">
                <Setter Property="Foreground" Value="{StaticResource Blue.WarningBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="Error">
                <Setter Property="Foreground" Value="{StaticResource Blue.ErrorBrush}"/>
            </DataTrigger>
            
            <!-- 主题相关的多条件触发器 -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="Success"/>
                    <Condition Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Dark"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource Dark.SuccessBrush}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="Warning"/>
                    <Condition Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Dark"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource Dark.WarningBrush}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="Error"/>
                    <Condition Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Dark"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{StaticResource Dark.ErrorBrush}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 注释文本样式 -->
    <Style x:Key="CaptionTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Opacity" Value="0.75"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Blue">
                <Setter Property="Foreground" Value="{StaticResource Blue.ForegroundBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Green">
                <Setter Property="Foreground" Value="{StaticResource Green.ForegroundBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Red">
                <Setter Property="Foreground" Value="{StaticResource Red.ForegroundBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Dark">
                <Setter Property="Foreground" Value="{StaticResource Dark.ForegroundBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 高亮文本样式 -->
    <Style x:Key="HighlightTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Blue">
                <Setter Property="Foreground" Value="{StaticResource Blue.AccentBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Green">
                <Setter Property="Foreground" Value="{StaticResource Green.AccentBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Red">
                <Setter Property="Foreground" Value="{StaticResource Red.AccentBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Dark">
                <Setter Property="Foreground" Value="{StaticResource Dark.AccentBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- 链接文本样式 -->
    <Style x:Key="LinkTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextDecorations" Value="Underline"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Blue">
                <Setter Property="Foreground" Value="{StaticResource Blue.PrimaryBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Green">
                <Setter Property="Foreground" Value="{StaticResource Green.PrimaryBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Red">
                <Setter Property="Foreground" Value="{StaticResource Red.PrimaryBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding DataContext.CurrentTheme, RelativeSource={RelativeSource AncestorType=Window}}" Value="Dark">
                <Setter Property="Foreground" Value="{StaticResource Blue.PrimaryBrush}"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary> 